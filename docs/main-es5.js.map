{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-post.service.ts","webpack:///src/app/add-post/add-post.component.ts","webpack:///src/app/add-post/add-post.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register-success/register-success.component.ts","webpack:///src/app/auth/register-success/register-success.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/http-client-interceptor.ts","webpack:///src/app/model/user.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/service/user.service.ts","webpack:///src/app/user-form/user-form.component.ts","webpack:///src/app/user-form/user-form.component.html","webpack:///src/app/user-list/user-list.component.ts","webpack:///src/app/user-list/user-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddPostService","httpCLient","postPayLoad","post","get","permaLink","providedIn","AddPostComponent","addPostService","router","title","body","addPostForm","content","username","value","addPost","subscribe","data","navigateByUrl","error","console","log","selector","templateUrl","styleUrls","routes","path","component","AppRoutingModule","forRoot","relativeLinkResolution","imports","AppComponent","authService","logout","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthService","httpClient","localStorageService","url","registerPayload","loginPayload","pipe","store","authenticationToken","retrieve","clear","LoginComponent","loginForm","password","login","onSubmit","RegisterSuccessComponent","RegisterComponent","formBuilder","registerForm","group","email","confirmPassword","register","HeaderComponent","HomeComponent","postService","posts","getAllPosts","HttpClientInterceptor","$localStorage","next","token","cloned","clone","headers","set","handle","User","PostComponent","params","getPost","err","UserService","http","usersUrl","user","UserFormComponent","route","userService","save","result","gotoUserList","navigate","UserListComponent","findAll","users","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostPayLoad } from './add-post/post-payload';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddPostService {\n\n  constructor(private httpCLient: HttpClient) {\n\n  }\n\n  addPost(postPayLoad: PostPayLoad) {\n    return this.httpCLient.post('http://localhost:9090/api/posts', postPayLoad);\n  }\n\n  getAllPosts(): Observable<Array<PostPayLoad>>{\n    return this.httpCLient.get<Array<PostPayLoad>>(\"http://localhost:9090/api/posts/all\");\n  }\n\n  getPost(permaLink: Number):Observable<PostPayLoad>{\n    return this.httpCLient.get<PostPayLoad>('http://localhost:9090/api/posts/get/'+permaLink);\n  }\n \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AddPostService } from '../add-post.service';\nimport { PostPayLoad } from './post-payload';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n\n  addPostForm: FormGroup;\n  postPayLoad: PostPayLoad;\n  title = new FormControl('');\n  body = new FormControl('');\n\n\n  constructor(private addPostService: AddPostService, private router: Router) {\n    this.addPostForm = new FormGroup({\n      title: this.title,\n      body: this.body\n    })\n    this.postPayLoad = {\n      id: '',\n      content: '',\n      title: '',\n      username: ''\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  addPost() {\n    this.postPayLoad.content = this.addPostForm.get('body').value;\n    this.postPayLoad.title = this.addPostForm.get('title').value;\n    this.addPostService.addPost(this.postPayLoad).subscribe(data => {\n      this.router.navigateByUrl('/');\n    }, error => {\n      console.log('Fauilure Response');\n    })\n\n  }\n}\n","<p>add-post works!</p>\n<div class=\"add-post-content\">\n    <div class=\"container\">\n        <div>\n            <h3 class=\"new-post-title\"> Create New Post </h3>\n        </div>\n        <hr>\n        <form [formGroup]=\"addPostForm\" (ngSubmit) =\"addPost()\" >\n            <div class=\"form-group\">\n                <label class=\"post-title\">Title</label>\n                <input type=\"text\" [formControlName] =\"'title'\" class=\"form-control\" placeholder=\"title\">\n            </div>\n            <div class=\"form-group\">\n                <label class=\"post-content\">Body</label>\n                <editor [formControlName] =\"'body'\" [init]=\"{plugins:'link'}\"></editor>\n            </div>\n            <div class=\"form-group\">\n              \n                <button type=\"submit\" class=\"btn btn-primary\">Post</button>\n            </div>\n        </form>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h1 class=\"title\"> SpringBLog </h1>\n            </div>\n            <div class=\"col-md-3\">\n                <a href=\"/add-post\" class=\"new-post\"> Add post </a>\n\n            </div>\n            <div class=\"col-md-3\">\n                <a href=\"/login\" class=\"login btn btn-default\"> Login </a>\n                <a href=\"/register\" class=\"register btn btn-default\"> Register </a>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserFormComponent } from './user-form/user-form.component';\n\n\nconst routes: Routes = [\n  { path: 'users', component: UserListComponent },\n  { path: 'adduser', component: UserFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddPostService } from './add-post.service';\nimport { PostPayLoad } from './add-post/post-payload';\nimport { AuthService } from './auth/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent implements OnInit{\n  title = 'armandocode';\n  \n    constructor(public authService:AuthService){\n  \n    }\n    ngOnInit(){\n  \n    }\n    logout(){\n      this.authService.logout();\n    }\n\n \n}\n","<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-xl\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body \">\r\n        <ul class=\"navbar-nav \">\r\n          <li class=\"nav-item active \">\r\n            <a class=\"nav-link\" href=\"#\">Inicio <span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"https://introcs.cs.princeton.edu/java/home/\" target=\"_blank\"\r\n              data-dismiss=\"modal\">Aprendamos Java</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"https://farmandosb.github.io/zeldasounds/\" target=\"_blank\"\r\n              data-dismiss=\"modal\">Botonera de sonidos Zelda</a>\r\n          </li>\r\n         \r\n          <li class=\"nav-item\">\r\n            <a routerLink=\"/register\" class=\"nav-link\" data-dismiss=\"modal\">Registro</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a routerLink=\"/login\" class=\"nav-link\" data-dismiss=\"modal\">Iniciar sesión</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#contacto\" data-dismiss=\"modal\">Contacto</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated\">\r\n            <a routerLink=\"/add-post\" class=\"nav-link\" data-dismiss=\"modal\">Add post</a>\r\n          </li>\r\n          <div class=\"nav-item\" *ngIf=\"authService.isAuthenticated\">\r\n            <button class=\"btn btn-default logout\" data-dismiss=\"modal\" (click)=\"logout()\">Logout</button>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div id=\"wpp\"></div>\r\n<!-- Navbar -->\r\n\r\n<nav class=\"navbar navbar-expand-lg fixed-top navbar-dark bg-purple px-4 py-3\">\r\n  <a class=\"navbar-brand no-mostrar logo\" href=\"#\"></a>\r\n  <button class=\"navbar-toggler logo\" id=\"togglebutton\" type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n    aria-controls=\"modal\">\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample08\">\r\n\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Inicio <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"https://introcs.cs.princeton.edu/java/home/\" target=\"_blank\"\r\n          data-dismiss=\"modal\">Aprendamos Java</a>\r\n      </li>\r\n    \r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"/register\" class=\"nav-link\" data-dismiss=\"modal\">Registro</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"/login\" class=\"nav-link\" data-dismiss=\"modal\">Login</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#contacto\" data-dismiss=\"modal\">Contacto</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated()\">\r\n        <a routerLink=\"/add-post\" class=\"nav-link\" data-dismiss=\"modal\">Add post</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated()\"> \r\n        <button class=\"btn btn-default logout\" data-dismiss=\"modal\" (click)=\"logout()\">Logout</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n<!--div id=\"carouselExampleIndicators\" class=\"carousel slide pt-6\" data-ride=\"carousel\">\r\n  <ol class=\"carousel-indicators\">\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"3\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"4\"></li>\r\n  </ol>\r\n  <div class=\"carousel-inner\">\r\n    <div class=\"carousel-item active\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c0.png\" alt=\"First slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <a href=\"https://introcs.cs.princeton.edu/java/home/\" target=\"_blank\"><h3>Aprendamos Java</h3></a>\r\n        <p class=\"d-none d-sm-block\">Estamos haciendo juntos el curso de la universidad de Princeton</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c5.png\" alt=\"Second slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <a href=\"https://farmandosb.github.io/zeldasounds/\" target=\"_blank\"><h3>Botonera de sonidos de Zelda utilizando HTML, CSS y Javascript plano</h3></a>\r\n        <p class=\"d-none d-sm-block\"></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c2.png\" alt=\"Third slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <h3>¿Estás viendo esto desde tu móvil?</h3>\r\n        <p class=\"d-none d-sm-block\">Pasamos muchas horas frente a la pantalla del celular, nuestras páginas ofrecen una\r\n          experiencia de usuario\r\n          responsiva e intuitiva que se enfoca en dispositivos portátiles.</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c3.png\" alt=\"Fourth slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <h3>Reúne todos tus medios de contacto en un sólo lugar!</h3>\r\n        <p class=\"d-none d-sm-block\">Integramos tus redes sociales en la página web para que el visitante tenga todas\r\n          las opciones para\r\n          contactarte.</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c4.png\" alt=\"Fifth slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <h3>¿Necesito un página web?</h3>\r\n        <p class=\"d-none d-sm-block\">Todo se hace desde la web, así que no esperes más y contáctanos para asesorarte.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div-->\r\n<div class=\"container pt-6 mt-2\">\r\n\r\n  <div class=\"row\">\r\n   \r\n    <div class=\"col-sm-10\">\r\n      <h3>\r\n        Armandocode Blog\r\n        <small class=\"text-muted\">Aprende Java con nosotros.</small>\r\n        \r\n      </h3>\r\n\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <h3>\r\n        ArmandoGeek\r\n        <small class=\"text-muted\">Emula GameCube y N64 con tu Moto G100</small>\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n          <img class=\"card-img-top\" src=\"assets/img/c\" alt=\"Card image cap\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Card title</h5>\r\n            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n            <a href=\"https://youtu.be/iryVVVLqLK8\" class=\"btn btn-primary\">Ver en Youtube</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n          <img class=\"card-img-top\" src=\"assets/img/c\" alt=\"Card image cap\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Card title</h5>\r\n            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n            <a href=\"https://youtu.be/kDmeaebBlgE\" class=\"btn btn-primary\">Ver en Youtube</a>\r\n          </div>\r\n        </div>\r\n      </h3>\r\n    </div>\r\n  </div>\r\n\r\n  <!--hr class=\"featurette-divider\">\r\n\r\n  <div class=\"row featurette\">\r\n    <div class=\"col-md-7\">\r\n      <h2 class=\"featurette-heading\">¿Qué es una landing page? <span class=\"text-muted\">La página web mas simple</span>\r\n      </h2>\r\n      <p class=\"lead\">Es una página web individual diseñada para captar la atención del visitante y lograr un objetivo\r\n        claro.</p>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <img class=\"bd-placeholder-img bd-placeholder-img-lg img-fluid mx-auto\" src=\"assets/img/hvsl.jpg\" width=\"500\"\r\n        height=\"500\" focusable=\"false\">\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"featurette-divider\">\r\n\r\n  <div class=\"row featurette\">\r\n    <div class=\"col-md-7 order-md-2\">\r\n      <h2 class=\"featurette-heading\">¿Homepage o landingpage? <span class=\"text-muted\">Diferencias</span></h2>\r\n      <p class=\"lead\">En una homepage se capturan visitantes que provienen de diversas fuentes, y esta diseñada con\r\n        diferentes elementos que muestran al usuario , todas las posibilidades que se ofrecen. Por el contrario una\r\n        landing page atrae el usuario que tienen un interés particular hacia un punto específico para capturar su\r\n        atención y lograr que realice una acción (call to action).</p>\r\n    </div>\r\n    <div class=\"col-md-5 order-md-1\">\r\n      <img class=\"bd-placeholder-img bd-placeholder-img-lg img-fluid mx-auto\" src=\"assets/img/hvsl.jpg\" width=\"500\"\r\n        height=\"500\" focusable=\"false\">\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"featurette-divider\">\r\n\r\n  <div class=\"row featurette\">\r\n    <div class=\"col-md-7\">\r\n      <h2 class=\"featurette-heading\">¿Necesito una landing page? <span class=\"text-muted\"></span></h2>\r\n      <p class=\"lead\">Si por ejemplo, tienes una campaña de marketing para ofrecer un producto o servicio y quieres\r\n        mostrar en una sóla página toda las ventajas que tiene el usuario al adquirir tu producto o contratar tu\r\n        servicio, lo ideal es redirigir el tráfico hacia a una landing page donde se muestre de un vistazo las bondades\r\n        de tu producto y tener mayor oportunidad de conseguir la compra de tu producto o guardar el contacto de ese\r\n        potencial cliente por medio de un formulario.</p>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <img class=\"bd-placeholder-img bd-placeholder-img-lg img-fluid mx-auto\" src=\"assets/img/hvsl.jpg\" width=\"500\"\r\n        height=\"500\" focusable=\"false\">\r\n    </div>\r\n  </div-->\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<footer class=\"footer fixed-bottom\" id=\"contacto\">\r\n  <div class=\"container text-white\">\r\n    <br>\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-12 text-center\">\r\n        <ul class=\"social-network social-circle\">\r\n\r\n          <li><a href=\"https://www.instagram.com/armando.code/\" class=\"icoInstagram\" title=\"Instagram\"><i\r\n                class=\"fa fa-instagram\"></i></a></li>\r\n          <li><a href=\"https://www.facebook.com/Armando.Code/\" class=\"icoFacebook\" title=\"Facebook\"><i\r\n                class=\"fa fa-facebook\"></i></a></li>\r\n          <li><a href=\"https://www.linkedin.com/in/freddy-armando-suarez/\" class=\"icoLinkedin\" title=\"Linkedin\"><i\r\n                class=\"fa fa-linkedin\"></i></a></li>\r\n          <li><a href=\"https://www.youtube.com/channel/UCTwDg2KEkkgBg7rO5fbmUEQ/\" class=\"icoYoutube\" title=\"Youtube\"><i\r\n                class=\"fa fa-youtube\"></i></a></li>\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center pt-4\">\r\n        <p>Copyright &copy; <a href=\"https://farmandosb.github.io/armandocode\">armandocode</a> by\r\n          <a href=\"https://farmandosb.github.io\">farmandosb</a>.\r\n        </p>\r\n        <p>v1.0.0</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, OnInit } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserService } from './service/user.service';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterSuccessComponent } from './auth/register-success/register-success.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { HttpClientInterceptor } from './http-client-interceptor';\nimport { PostComponent } from './post/post.component';\nimport { AuthService } from './auth/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UserFormComponent,\n    RegisterComponent,\n    LoginComponent,\n    RegisterSuccessComponent,\n    HomeComponent,\n    HeaderComponent,\n    AddPostComponent,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxWebstorageModule.forRoot(),\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'post/:id', component: PostComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'register-success', component: RegisterSuccessComponent },\n      { path: 'home', component: HomeComponent },\n      { path: 'add-post', component: AddPostComponent }\n    ], { relativeLinkResolution: 'legacy' }),\n    EditorModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpClientInterceptor, multi: true }, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { JwtAuthResponse } from './jwt-auth-response';\nimport { LoginPayload } from './login-payload';\nimport { RegisterPayload } from './register-payload';\n\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from 'ngx-webstorage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n \n  private url = 'http://localhost:9090/api/auth/';\n\n  constructor(private httpClient: HttpClient, private localStorageService: LocalStorageService) { }\n\n  register(registerPayload: RegisterPayload): Observable<any> {\n    console.log(\"inside register angular\");\n    return this.httpClient.post(this.url + 'signup', registerPayload)\n  }\n\n\n  login(loginPayload: LoginPayload): Observable<boolean> {\n    return this.httpClient.post<JwtAuthResponse>(this.url + 'login', loginPayload).pipe(map(data => {\n      this.localStorageService.store('authenticationToken', data.authenticationToken);\n      this.localStorageService.store('username', data.username);\n      return true;\n    }));\n  }\n\n\n  isAuthenticated() : Boolean {\n    return this.localStorageService.retrieve('username')!=null\n  }\n\n  logout() {\n    this.localStorageService.clear('authenticationToken');\n    this.localStorageService.clear('username');\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { LoginPayload } from '../login-payload';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginPayload: LoginPayload;\n  \n\n\n  constructor(private authService: AuthService, private router: Router) { \n    this.loginForm = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n    this.loginPayload = {\n      username: \"\",\n      password: \"\"\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.loginPayload.username = this.loginForm.get('username').value;\n    this.loginPayload.password = this.loginForm.get('password').value;\n    console.log(\"username:\"+this.loginPayload.username);\n    console.log(\"password:\"+this.loginPayload.password);\n    \n    this.authService.login(this.loginPayload).subscribe(data=>{\n      console.log('login success');\n      this.router.navigateByUrl('/');\n\n    },  error => {\n      console.log('login failed');\n    });\n\n  }\n\n}\n","<p>login works!</p>\n<div class=\"container justify-content-center\">\n    <form class=\"form-signin\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n        <h1 class=\"h3 mb-3 font-weight-normal\">Please Sign in</h1>\n        <div class=\"form-group\">\n            <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n            <input type=\"text\" id=\"inputUsername\" [formControlName]=\"'username'\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n            <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\"class=\"form-control\" placeholder=\"Password\" required=\"\" autofocus=\"\">\n        </div>\n     \n        <button class=\"btn btn-lg btn-outline-dark btn-block\" type=\"submit\">Sign up</button>\n        \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-success',\n  templateUrl: './register-success.component.html',\n  styleUrls: ['./register-success.component.css']\n})\nexport class RegisterSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register-success works!</p>\n<div class=\"container\">\n    <h3>Registro exitoso!, haz click <a href=\"/login\">aquí</a> para loguearte</h3>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RegisterPayload } from '../register-payload';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm : FormGroup;\n  registerPayload: RegisterPayload;\n  constructor(private formBuilder:FormBuilder, private authService: AuthService, private router: Router) {\n    this.registerForm = this.formBuilder.group({\n      username:'',\n      email:'',\n      password:'',\n      confirmPassword:''\n    });\n    this.registerPayload={\n      username:'',\n      email:'',\n      password:'',\n      confirmPassword:''\n   };\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.registerPayload.username =  this.registerForm.get('username').value;\n    this.registerPayload.email = this.registerForm.get('email').value;\n    this.registerPayload.password = this.registerForm.get('password').value;\n    this.registerPayload.confirmPassword = this.registerForm.get('confirmPassword').value;\n    console.log('register username '+ this.registerPayload.username);\n    this.authService.register(this.registerPayload).subscribe(data=>{\n      console.log('register success');\n      this.router.navigateByUrl('/register-success');\n\n    }, error => {\n      console.log('register failed');\n    }\n    );\n  }\n\n}\n","<p>register works!</p>\n<div class=\"container justify-content-center\">\n    <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Please Register</h1>\n        <div class=\"form-group\">\n            <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n            <input type=\"text\" id=\"inputUsername\" [formControlName]=\"'username'\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n            <input type=\"text\" id=\"inputEmail\" [formControlName]=\"'email'\" class=\"form-control\" placeholder=\"Email\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n            <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\"class=\"form-control\" placeholder=\"Password\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputConfirmPassword\" class=\"sr-only\">Password</label>\n            <input type=\"password\" id=\"inputConfirmPassword\" [formControlName]=\"'confirmPassword'\" class=\"form-control\" placeholder=\"Confirm Password\" required=\"\" autofocus=\"\">\n        </div>\n        <button class=\"btn btn-lg btn-outline-dark btn-block\" type=\"submit\">Sign up</button>\n        \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header works!</p>\n<div class=\"header\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h1 class=\"title\"> SpringBLog </h1>\n            </div>\n            <div class=\"col-md-3\" ng-if=\"authService.isAuthenticated()\">\n                <a href=\"/add-post\" class=\"new-post\"> Add post </a>\n\n            </div>\n            <div class=\"col-md-3\">\n                <a href=\"/login\" class=\"login btn btn-default\"> Login </a>\n                <a href=\"/register\" class=\"register btn btn-default\"> Register </a>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddPostService } from '../add-post.service';\nimport { PostPayLoad } from '../add-post/post-payload';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  posts: Observable<Array<PostPayLoad>>;\n\n  constructor(private postService: AddPostService, public authService: AuthService) { }\n\n  ngOnInit() {\n    this.posts = this.postService.getAllPosts();\n\n\n\n\n  }\n  logout() {\n    this.authService.logout();\n  }\n}","<div class=\"container justify-content-center\">\n    \n        \n        <div class=\"col-md-3\">\n            <a href=\"/add-post\" class=\"new-post\"> Add post </a>\n            <div class=\"nav-item\" *ngIf=\"authService.isAuthenticated\">\n                <button class=\"btn btn-default logout\" data-dismiss=\"modal\" (click)=\"logout()\">Logout</button>\n              </div>\n\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"row cardpost\" *ngFor=\"let post of posts | async\">\n                    <div>\n                        <div class=\"flex-center\">\n                            <div class=\"post-inline-avatar\">\n                                <i class=\"fas fa-user avatar\"></i>\n                            </div>\n                            <div class=\"post-inline-author\">\n                                <a>{{post.username}}</a>\n                                <div>5 min read</div>\n                            </div>\n                            \n                        </div>\n                        <h3> <a href=\"/post/{{post.id}}\" class=\"blog-title\">{{post.title}}</a></h3>\n                    \n                        <p [innerHTML]=\"post.content\"></p>\n                        <div>\n                            <a type=\"button\" href=\"/post/{{post.id}}\" class=\"read-more btn btn-default\">Read More</a>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n\n            </div>\n\n        </div>\n ","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { LocalStorageService } from \"ngx-webstorage\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class HttpClientInterceptor implements HttpInterceptor {\r\n    constructor(private $localStorage: LocalStorageService) {\r\n\r\n    }\r\n    intercept(req: HttpRequest<any>,\r\n        next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = this.$localStorage.retrieve(\"authenticationToken\");\r\n      \r\n\r\n        if (token) {\r\n            console.log('inside intercept jwt token: ' + token);\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\"Authorization\",\r\n                    \"Bearer \" + token)\r\n            });\r\n\r\n            return next.handle(cloned);\r\n        }\r\n        else {\r\n            console.log('inside intercept not token found in LocalStorage, token= '+token);\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n","export class User {\n    id: string;\n    email: string;\n    password: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AddPostService } from '../add-post.service';\nimport { PostPayLoad } from '../add-post/post-payload';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post: PostPayLoad;\n  permaLink  : Number;\n\n  constructor(private router: ActivatedRoute, private postService: AddPostService) { }\n\n  ngOnInit(): void {\n    this.router.params.subscribe(params=>{\n      this.permaLink = params['id'];\n    });\n\n    this.postService.getPost(this.permaLink).subscribe((data:PostPayLoad)=>{\n      this.post =   data;\n    }, (err:any)=>{\n      console.log('Failure response');\n    })\n  }\n\n}\n","<div class=\"content\">\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-1\">\n                <div class=\"cold-md-8\">\n                    <h1 class=\"blog-title\"> {{post.title}}</h1>\n                    <span>\n                        <hr>\n                        <p [innerHTML]>=\"post.content\"</p>\n                    </span>\n                    <hr>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private usersUrl: string;\n\n\n  constructor(private http: HttpClient) { \n    this.usersUrl = 'http://localhost:9090/users';\n  }\n\n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl);\n  }\n\n  public save(user: User) {\n    return this.http.post<User>(`${this.usersUrl}/new`, user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent {\n\n  user: User;\n\n  constructor(  \n    private route: ActivatedRoute, \n    private router: Router, \n    private userService: UserService\n    \n  ) { \n    this.user = new User();\n  }\n\n  onSubmit() {\n    this.userService.save(this.user).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n\n}\n","<p>user-form works!</p>\n<div class=\"card my-5\">\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\n      \n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" [(ngModel)]=\"user.email\" \n            class=\"form-control\" \n            id=\"email\" \n            name=\"email\" \n            placeholder=\"Enter your email address\"\n            required #email=\"ngModel\">\n          <div [hidden]=\"!email.pristine\" class=\"alert alert-danger\">Email is required</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" [(ngModel)]=\"user.password\" \n              class=\"form-control\" \n              id=\"password\" \n              name=\"password\" \n              placeholder=\"Enter your password\"\n              required #password=\"ngModel\">\n          </div>\n          <div [hidden]=\"!password.pristine\" class=\"alert alert-danger\">Password is required</div>\n        <button type=\"submit\" [disabled]=\"!userForm.form.valid\" \n          class=\"btn btn-info\">Submit</button>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users: User[];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(){\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n    });\n  }\n\n}\n","<p>user-list works!</p>\n<div class=\"card my-5\">\n    <div class=\"card-body\">\n      <table class=\"table table-bordered table-striped\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Password</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\">\n            <td>{{ user.id }}</td>\n            <td><a href=\"mailto:{{ user.email }}\">{{ user.email }}</a></td>\n            <td>{{ user.password }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}