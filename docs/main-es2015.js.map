{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-post.service.ts","./src/app/add-post/add-post.component.ts","./src/app/add-post/add-post.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register-success/register-success.component.ts","./src/app/auth/register-success/register-success.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/http-client-interceptor.ts","./src/app/model/user.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/service/user.service.ts","./src/app/url.ts","./src/app/user-form/user-form.component.ts","./src/app/user-form/user-form.component.html","./src/app/user-list/user-list.component.ts","./src/app/user-list/user-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PostPayLoad } from './add-post/post-payload';\nimport { URLBackend } from './url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddPostService {\n\n  constructor(private httpCLient: HttpClient) {\n\n  }\n\n  addPost(postPayLoad: PostPayLoad) {\n    return this.httpCLient.post(URLBackend.baseURL, postPayLoad);\n  }\n\n  getAllPosts(): Observable<Array<PostPayLoad>>{\n    return this.httpCLient.get<Array<PostPayLoad>>(URLBackend.baseURL+\"/api/posts/all\");\n  }\n\n  getPost(permaLink: Number):Observable<PostPayLoad>{\n    return this.httpCLient.get<PostPayLoad>(URLBackend.baseURL+permaLink);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AddPostService } from '../add-post.service';\nimport { PostPayLoad } from './post-payload';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.css']\n})\nexport class AddPostComponent implements OnInit {\n\n  addPostForm: FormGroup;\n  postPayLoad: PostPayLoad;\n  title = new FormControl('');\n  body = new FormControl('');\n\n\n  constructor(private addPostService: AddPostService, private router: Router) {\n    this.addPostForm = new FormGroup({\n      title: this.title,\n      body: this.body\n    })\n    this.postPayLoad = {\n      id: '',\n      content: '',\n      title: '',\n      username: ''\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  addPost() {\n    this.postPayLoad.content = this.addPostForm.get('body').value;\n    this.postPayLoad.title = this.addPostForm.get('title').value;\n    this.addPostService.addPost(this.postPayLoad).subscribe(data => {\n      this.router.navigateByUrl('/');\n    }, error => {\n      console.log('Fauilure Response');\n    })\n\n  }\n}\n","<p>add-post works!</p>\n<div class=\"add-post-content\">\n    <div class=\"container\">\n        <div>\n            <h3 class=\"new-post-title\"> Create New Post </h3>\n        </div>\n        <hr>\n        <form [formGroup]=\"addPostForm\" (ngSubmit) =\"addPost()\" >\n            <div class=\"form-group\">\n                <label class=\"post-title\">Title</label>\n                <input type=\"text\" [formControlName] =\"'title'\" class=\"form-control\" placeholder=\"title\">\n            </div>\n            <div class=\"form-group\">\n                <label class=\"post-content\">Body</label>\n                <editor [formControlName] =\"'body'\" [init]=\"{plugins:'link'}\"></editor>\n            </div>\n            <div class=\"form-group\">\n              \n                <button type=\"submit\" class=\"btn btn-primary\">Post</button>\n            </div>\n        </form>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h1 class=\"title\"> SpringBLog </h1>\n            </div>\n            <div class=\"col-md-3\">\n                <a href=\"/add-post\" class=\"new-post\"> Add post </a>\n\n            </div>\n            <div class=\"col-md-3\">\n                <a href=\"/login\" class=\"login btn btn-default\"> Login </a>\n                <a href=\"/register\" class=\"register btn btn-default\"> Register </a>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserFormComponent } from './user-form/user-form.component';\n\n\nconst routes: Routes = [\n  { path: 'users', component: UserListComponent },\n  { path: 'adduser', component: UserFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddPostService } from './add-post.service';\nimport { PostPayLoad } from './add-post/post-payload';\nimport { AuthService } from './auth/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent implements OnInit{\n  title = 'armandocode';\n  \n    constructor(public authService:AuthService){\n  \n    }\n    ngOnInit(){\n  \n    }\n    logout(){\n      this.authService.logout();\n    }\n\n \n}\n","<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-xl\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body \">\r\n        <ul class=\"navbar-nav \">\r\n          <li class=\"nav-item active \">\r\n            <a class=\"nav-link\" href=\"#\">Inicio <span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"https://introcs.cs.princeton.edu/java/home/\" target=\"_blank\"\r\n              data-dismiss=\"modal\">Aprendamos Java</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"https://farmandosb.github.io/zeldasounds/\" target=\"_blank\"\r\n              data-dismiss=\"modal\">Botonera de sonidos Zelda</a>\r\n          </li>\r\n         \r\n          <li class=\"nav-item\">\r\n            <a routerLink=\"/register\" class=\"nav-link\" data-dismiss=\"modal\">Registro</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a routerLink=\"/login\" class=\"nav-link\" data-dismiss=\"modal\">Iniciar sesión</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#contacto\" data-dismiss=\"modal\">Contacto</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated\">\r\n            <a routerLink=\"/add-post\" class=\"nav-link\" data-dismiss=\"modal\">Add post</a>\r\n          </li>\r\n          <div class=\"nav-item\" *ngIf=\"authService.isAuthenticated\">\r\n            <button class=\"btn btn-default logout\" data-dismiss=\"modal\" (click)=\"logout()\">Logout</button>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div id=\"wpp\"></div>\r\n<!-- Navbar -->\r\n\r\n<nav class=\"navbar navbar-expand-lg fixed-top navbar-dark bg-purple px-4 py-3\">\r\n  <a class=\"navbar-brand no-mostrar logo\" href=\"#\"></a>\r\n  <button class=\"navbar-toggler logo\" id=\"togglebutton\" type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n    aria-controls=\"modal\">\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbarsExample08\">\r\n\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Inicio <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"https://introcs.cs.princeton.edu/java/home/\" target=\"_blank\"\r\n          data-dismiss=\"modal\">Aprendamos Java</a>\r\n      </li>\r\n    \r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"/register\" class=\"nav-link\" data-dismiss=\"modal\">Registro</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a routerLink=\"/login\" class=\"nav-link\" data-dismiss=\"modal\">Login</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#contacto\" data-dismiss=\"modal\">Contacto</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated()\">\r\n        <a routerLink=\"/add-post\" class=\"nav-link\" data-dismiss=\"modal\">Add post</a>\r\n      </li>\r\n      <li class=\"nav-item\" *ngIf=\"authService.isAuthenticated()\"> \r\n        <button class=\"btn btn-default logout\" data-dismiss=\"modal\" (click)=\"logout()\">Logout</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n<!--div id=\"carouselExampleIndicators\" class=\"carousel slide pt-6\" data-ride=\"carousel\">\r\n  <ol class=\"carousel-indicators\">\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"3\"></li>\r\n    <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"4\"></li>\r\n  </ol>\r\n  <div class=\"carousel-inner\">\r\n    <div class=\"carousel-item active\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c0.png\" alt=\"First slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <a href=\"https://introcs.cs.princeton.edu/java/home/\" target=\"_blank\"><h3>Aprendamos Java</h3></a>\r\n        <p class=\"d-none d-sm-block\">Estamos haciendo juntos el curso de la universidad de Princeton</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c5.png\" alt=\"Second slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <a href=\"https://farmandosb.github.io/zeldasounds/\" target=\"_blank\"><h3>Botonera de sonidos de Zelda utilizando HTML, CSS y Javascript plano</h3></a>\r\n        <p class=\"d-none d-sm-block\"></p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c2.png\" alt=\"Third slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <h3>¿Estás viendo esto desde tu móvil?</h3>\r\n        <p class=\"d-none d-sm-block\">Pasamos muchas horas frente a la pantalla del celular, nuestras páginas ofrecen una\r\n          experiencia de usuario\r\n          responsiva e intuitiva que se enfoca en dispositivos portátiles.</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c3.png\" alt=\"Fourth slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <h3>Reúne todos tus medios de contacto en un sólo lugar!</h3>\r\n        <p class=\"d-none d-sm-block\">Integramos tus redes sociales en la página web para que el visitante tenga todas\r\n          las opciones para\r\n          contactarte.</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img class=\"d-block w-100\" src=\"assets/img/c4.png\" alt=\"Fifth slide\">\r\n      <div class=\"carousel-caption d-block\">\r\n        <h3>¿Necesito un página web?</h3>\r\n        <p class=\"d-none d-sm-block\">Todo se hace desde la web, así que no esperes más y contáctanos para asesorarte.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div-->\r\n<div class=\"container pt-6 mt-2\">\r\n\r\n  <div class=\"row\">\r\n   \r\n    <div class=\"col-sm-10\">\r\n      <h3>\r\n        Armandocode Blog\r\n        <small class=\"text-muted\">Aprende Java con nosotros.</small>\r\n        \r\n      </h3>\r\n\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <h3>\r\n        ArmandoGeek\r\n        <small class=\"text-muted\">Emula GameCube y N64 con tu Moto G100</small>\r\n        <div class=\"card mt-5\" style=\"width: 18rem;\">\r\n          <img class=\"card-img-top\" src=\"assets/img/minizelda.jpg\" alt=\"Card image cap\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Moto G100 Running Dolphin Emulator on TV using HDMI cable</h5>\r\n            <a href=\"https://youtu.be/iryVVVLqLK8\" class=\"btn btn-danger\">Ver en Youtube</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"card mt-5\" style=\"width: 18rem;\">\r\n          <img class=\"card-img-top\" src=\"assets/img/minizelda2.jpg\" alt=\"Card image cap\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Zelda The Wind Waker en un Moto G100 - Parte 1</h5>\r\n            <a href=\"https://youtu.be/kDmeaebBlgE\" class=\"btn btn-danger\">Ver en Youtube</a>\r\n          </div>\r\n        </div>\r\n      </h3>\r\n    </div>\r\n  </div>\r\n\r\n  <!--hr class=\"featurette-divider\">\r\n\r\n  <div class=\"row featurette\">\r\n    <div class=\"col-md-7\">\r\n      <h2 class=\"featurette-heading\">¿Qué es una landing page? <span class=\"text-muted\">La página web mas simple</span>\r\n      </h2>\r\n      <p class=\"lead\">Es una página web individual diseñada para captar la atención del visitante y lograr un objetivo\r\n        claro.</p>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <img class=\"bd-placeholder-img bd-placeholder-img-lg img-fluid mx-auto\" src=\"assets/img/hvsl.jpg\" width=\"500\"\r\n        height=\"500\" focusable=\"false\">\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"featurette-divider\">\r\n\r\n  <div class=\"row featurette\">\r\n    <div class=\"col-md-7 order-md-2\">\r\n      <h2 class=\"featurette-heading\">¿Homepage o landingpage? <span class=\"text-muted\">Diferencias</span></h2>\r\n      <p class=\"lead\">En una homepage se capturan visitantes que provienen de diversas fuentes, y esta diseñada con\r\n        diferentes elementos que muestran al usuario , todas las posibilidades que se ofrecen. Por el contrario una\r\n        landing page atrae el usuario que tienen un interés particular hacia un punto específico para capturar su\r\n        atención y lograr que realice una acción (call to action).</p>\r\n    </div>\r\n    <div class=\"col-md-5 order-md-1\">\r\n      <img class=\"bd-placeholder-img bd-placeholder-img-lg img-fluid mx-auto\" src=\"assets/img/hvsl.jpg\" width=\"500\"\r\n        height=\"500\" focusable=\"false\">\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"featurette-divider\">\r\n\r\n  <div class=\"row featurette\">\r\n    <div class=\"col-md-7\">\r\n      <h2 class=\"featurette-heading\">¿Necesito una landing page? <span class=\"text-muted\"></span></h2>\r\n      <p class=\"lead\">Si por ejemplo, tienes una campaña de marketing para ofrecer un producto o servicio y quieres\r\n        mostrar en una sóla página toda las ventajas que tiene el usuario al adquirir tu producto o contratar tu\r\n        servicio, lo ideal es redirigir el tráfico hacia a una landing page donde se muestre de un vistazo las bondades\r\n        de tu producto y tener mayor oportunidad de conseguir la compra de tu producto o guardar el contacto de ese\r\n        potencial cliente por medio de un formulario.</p>\r\n    </div>\r\n    <div class=\"col-md-5\">\r\n      <img class=\"bd-placeholder-img bd-placeholder-img-lg img-fluid mx-auto\" src=\"assets/img/hvsl.jpg\" width=\"500\"\r\n        height=\"500\" focusable=\"false\">\r\n    </div>\r\n  </div-->\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n<footer class=\"footer position-bottom\" id=\"contacto\">\r\n  <div class=\"container text-white\">\r\n    <br>\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-12 text-center\">\r\n        <ul class=\"social-network social-circle\">\r\n\r\n          <li><a href=\"https://www.instagram.com/armando.code/\" class=\"icoInstagram\" title=\"Instagram\"><i\r\n                class=\"fa fa-instagram\"></i></a></li>\r\n          <li><a href=\"https://www.facebook.com/Armando.Code/\" class=\"icoFacebook\" title=\"Facebook\"><i\r\n                class=\"fa fa-facebook\"></i></a></li>\r\n          <li><a href=\"https://www.linkedin.com/in/freddy-armando-suarez/\" class=\"icoLinkedin\" title=\"Linkedin\"><i\r\n                class=\"fa fa-linkedin\"></i></a></li>\r\n          <li><a href=\"https://www.youtube.com/channel/UCTwDg2KEkkgBg7rO5fbmUEQ/\" class=\"icoYoutube\" title=\"Youtube\"><i\r\n                class=\"fa fa-youtube\"></i></a></li>\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 text-center pt-4\">\r\n        <p>Copyright &copy; <a href=\"https://farmandosb.github.io/armandocode\">armandocode</a> by\r\n          <a href=\"https://farmandosb.github.io\">farmandosb</a>.\r\n        </p>\r\n        <p>v1.0.0</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, OnInit } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserService } from './service/user.service';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterSuccessComponent } from './auth/register-success/register-success.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { HttpClientInterceptor } from './http-client-interceptor';\nimport { PostComponent } from './post/post.component';\nimport { AuthService } from './auth/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UserFormComponent,\n    RegisterComponent,\n    LoginComponent,\n    RegisterSuccessComponent,\n    HomeComponent,\n    HeaderComponent,\n    AddPostComponent,\n    PostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxWebstorageModule.forRoot(),\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: 'post/:id', component: PostComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'register-success', component: RegisterSuccessComponent },\n      { path: 'home', component: HomeComponent },\n      { path: 'add-post', component: AddPostComponent }\n    ], { relativeLinkResolution: 'legacy' }),\n    EditorModule\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpClientInterceptor, multi: true }, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { JwtAuthResponse } from './jwt-auth-response';\nimport { LoginPayload } from './login-payload';\nimport { RegisterPayload } from './register-payload';\n\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { URLBackend } from '../url';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n \n  private url = URLBackend.baseURL+'/api/auth/';\n\n  constructor(private httpClient: HttpClient, private localStorageService: LocalStorageService) { }\n\n  register(registerPayload: RegisterPayload): Observable<any> {\n    console.log(\"inside register angular\");\n    return this.httpClient.post(this.url + 'signup', registerPayload)\n  }\n\n\n  login(loginPayload: LoginPayload): Observable<boolean> {\n    return this.httpClient.post<JwtAuthResponse>(this.url + 'login', loginPayload).pipe(map(data => {\n      this.localStorageService.store('authenticationToken', data.authenticationToken);\n      this.localStorageService.store('username', data.username);\n      return true;\n    }));\n  }\n\n\n  isAuthenticated() : Boolean {\n    return this.localStorageService.retrieve('username')!=null\n  }\n\n  logout() {\n    this.localStorageService.clear('authenticationToken');\n    this.localStorageService.clear('username');\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { LoginPayload } from '../login-payload';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginPayload: LoginPayload;\n  \n\n\n  constructor(private authService: AuthService, private router: Router) { \n    this.loginForm = new FormGroup({\n      username: new FormControl(),\n      password: new FormControl()\n    });\n    this.loginPayload = {\n      username: \"\",\n      password: \"\"\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.loginPayload.username = this.loginForm.get('username').value;\n    this.loginPayload.password = this.loginForm.get('password').value;\n    console.log(\"username:\"+this.loginPayload.username);\n    console.log(\"password:\"+this.loginPayload.password);\n    \n    this.authService.login(this.loginPayload).subscribe(data=>{\n      console.log('login success');\n      this.router.navigateByUrl('/');\n\n    },  error => {\n      console.log('login failed');\n    });\n\n  }\n\n}\n","<p>login works!</p>\n<div class=\"container justify-content-center\">\n    <form class=\"form-signin\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n        <h1 class=\"h3 mb-3 font-weight-normal\">Please Sign in</h1>\n        <div class=\"form-group\">\n            <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n            <input type=\"text\" id=\"inputUsername\" [formControlName]=\"'username'\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n            <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\"class=\"form-control\" placeholder=\"Password\" required=\"\" autofocus=\"\">\n        </div>\n     \n        <button class=\"btn btn-lg btn-outline-dark btn-block\" type=\"submit\">Sign up</button>\n        \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-success',\n  templateUrl: './register-success.component.html',\n  styleUrls: ['./register-success.component.css']\n})\nexport class RegisterSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register-success works!</p>\n<div class=\"container\">\n    <h3>Registro exitoso!, haz click <a href=\"/login\">aquí</a> para loguearte</h3>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { RegisterPayload } from '../register-payload';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm : FormGroup;\n  registerPayload: RegisterPayload;\n  constructor(private formBuilder:FormBuilder, private authService: AuthService, private router: Router) {\n    this.registerForm = this.formBuilder.group({\n      username:'',\n      email:'',\n      password:'',\n      confirmPassword:''\n    });\n    this.registerPayload={\n      username:'',\n      email:'',\n      password:'',\n      confirmPassword:''\n   };\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.registerPayload.username =  this.registerForm.get('username').value;\n    this.registerPayload.email = this.registerForm.get('email').value;\n    this.registerPayload.password = this.registerForm.get('password').value;\n    this.registerPayload.confirmPassword = this.registerForm.get('confirmPassword').value;\n    console.log('register username '+ this.registerPayload.username);\n    \n    this.authService.register(this.registerPayload).subscribe(data=>{\n      console.log('register success');\n      this.router.navigateByUrl('/register-success');\n\n    }, error => {\n      console.log('register failed');\n    }\n    );\n  }\n\n}\n","<div class=\"container justify-content-center\">\n    <form class=\"form-signin\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Por favor regístrate</h1>\n        <div class=\"form-group\">\n            <label for=\"inputUsername\" class=\"sr-only\">Nombre de usuario</label>\n            <input type=\"text\" id=\"inputUsername\" [formControlName]=\"'username'\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputEmail\" class=\"sr-only\">Correo</label>\n            <input type=\"text\" id=\"inputEmail\" [formControlName]=\"'email'\" class=\"form-control\" placeholder=\"Email\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputPassword\" class=\"sr-only\">Contraseña</label>\n            <input type=\"password\" id=\"inputPassword\" [formControlName]=\"'password'\"class=\"form-control\" placeholder=\"Password\" required=\"\" autofocus=\"\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"inputConfirmPassword\" class=\"sr-only\">Confirmar Contraseña</label>\n            <input type=\"password\" id=\"inputConfirmPassword\" [formControlName]=\"'confirmPassword'\" class=\"form-control\" placeholder=\"Confirm Password\" required=\"\" autofocus=\"\">\n        </div>\n        <button class=\"btn btn-lg btn-outline-dark btn-block\" type=\"submit\">Registrar</button>\n        \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header works!</p>\n<div class=\"header\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h1 class=\"title\"> SpringBLog </h1>\n            </div>\n            <div class=\"col-md-3\" ng-if=\"authService.isAuthenticated()\">\n                <a href=\"/add-post\" class=\"new-post\"> Add post </a>\n\n            </div>\n            <div class=\"col-md-3\">\n                <a href=\"/login\" class=\"login btn btn-default\"> Login </a>\n                <a href=\"/register\" class=\"register btn btn-default\"> Register </a>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddPostService } from '../add-post.service';\nimport { PostPayLoad } from '../add-post/post-payload';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  posts: Observable<Array<PostPayLoad>>;\n\n  constructor(private postService: AddPostService, public authService: AuthService) { }\n\n  ngOnInit() {\n    this.posts = this.postService.getAllPosts();\n\n\n\n\n  }\n  logout() {\n    this.authService.logout();\n  }\n}","<div class=\"container justify-content-center\">\n        <div class=\"col-md-3\">\n            <a href=\"/add-post\" class=\"new-post\"> Agregar Post </a>\n            <div class=\"nav-item\" *ngIf=\"authService.isAuthenticated\">\n                <button class=\"btn btn-default logout\" data-dismiss=\"modal\" (click)=\"logout()\">Logout</button>\n              </div>\n\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"row cardpost\" *ngFor=\"let post of posts | async\">\n                    <div>\n                        <div class=\"flex-center\">\n                            <div class=\"post-inline-avatar\">\n                                <i class=\"fas fa-user avatar\"></i>\n                            </div>\n                            <div class=\"post-inline-author\">\n                                <a>{{post.username}}</a>\n                                <div>5 min read</div>\n                            </div>\n                            \n                        </div>\n                        <h3> <a href=\"/post/{{post.id}}\" class=\"blog-title\">{{post.title}}</a></h3>\n                    \n                        <p [innerHTML]=\"post.content\"></p>\n                        <div>\n                            <a type=\"button\" href=\"/post/{{post.id}}\" class=\"read-more btn btn-default\">Leer más</a>\n                        </div>\n                        \n                    </div>\n                    \n                </div>\n\n            </div>\n\n        </div>\n ","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { LocalStorageService } from \"ngx-webstorage\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class HttpClientInterceptor implements HttpInterceptor {\r\n    constructor(private $localStorage: LocalStorageService) {\r\n\r\n    }\r\n    intercept(req: HttpRequest<any>,\r\n        next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = this.$localStorage.retrieve(\"authenticationToken\");\r\n      \r\n\r\n        if (token) {\r\n            console.log('inside intercept jwt token: ' + token);\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\"Authorization\",\r\n                    \"Bearer \" + token)\r\n            });\r\n\r\n            return next.handle(cloned);\r\n        }\r\n        else {\r\n            console.log('inside intercept not token found in LocalStorage, token= '+token);\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}\r\n","export class User {\n    id: string;\n    email: string;\n    password: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AddPostService } from '../add-post.service';\nimport { PostPayLoad } from '../add-post/post-payload';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post: PostPayLoad;\n  permaLink  : Number;\n\n  constructor(private router: ActivatedRoute, private postService: AddPostService) { }\n\n  ngOnInit(): void {\n    this.router.params.subscribe(params=>{\n      this.permaLink = params['id'];\n    });\n\n    this.postService.getPost(this.permaLink).subscribe((data:PostPayLoad)=>{\n      this.post =   data;\n    }, (err:any)=>{\n      console.log('Failure response');\n    })\n  }\n\n}\n","<div class=\"content\">\n\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-1\">\n                <div class=\"cold-md-8\">\n                    <h1 class=\"blog-title\"> {{post.title}}</h1>\n                    <span>\n                        <hr>\n                        <p [innerHTML]>=\"post.content\"</p>\n                    </span>\n                    <hr>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../model/user';\nimport { Observable } from 'rxjs/Observable';\nimport { URLBackend } from '../url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private usersUrl: string;\n\n  constructor(private http: HttpClient) { \n    this.usersUrl = URLBackend.baseURL;\n  }\n\n  public findAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.usersUrl);\n  }\n\n  public save(user: User) {\n    return this.http.post<User>(`${this.usersUrl}/new`, user);\n  }\n}\n","export class URLBackend {\r\n    public static get baseURL(): string { return \"https://secret-journey-10796.herokuapp.com\"; }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent {\n\n  user: User;\n\n  constructor(  \n    private route: ActivatedRoute, \n    private router: Router, \n    private userService: UserService\n    \n  ) { \n    this.user = new User();\n  }\n\n  onSubmit() {\n    this.userService.save(this.user).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/users']);\n  }\n\n}\n","<p>user-form works!</p>\n<div class=\"card my-5\">\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\n      \n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"text\" [(ngModel)]=\"user.email\" \n            class=\"form-control\" \n            id=\"email\" \n            name=\"email\" \n            placeholder=\"Enter your email address\"\n            required #email=\"ngModel\">\n          <div [hidden]=\"!email.pristine\" class=\"alert alert-danger\">Email is required</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" [(ngModel)]=\"user.password\" \n              class=\"form-control\" \n              id=\"password\" \n              name=\"password\" \n              placeholder=\"Enter your password\"\n              required #password=\"ngModel\">\n          </div>\n          <div [hidden]=\"!password.pristine\" class=\"alert alert-danger\">Password is required</div>\n        <button type=\"submit\" [disabled]=\"!userForm.form.valid\" \n          class=\"btn btn-info\">Submit</button>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../model/user';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users: User[];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(){\n    this.userService.findAll().subscribe(data => {\n      this.users = data;\n    });\n  }\n\n}\n","<p>user-list works!</p>\n<div class=\"card my-5\">\n    <div class=\"card-body\">\n      <table class=\"table table-bordered table-striped\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Password</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\">\n            <td>{{ user.id }}</td>\n            <td><a href=\"mailto:{{ user.email }}\">{{ user.email }}</a></td>\n            <td>{{ user.password }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}